#C++标准程序库读书笔记
##CH2   C++及其标准程序库简介

>STL的设计目标在于将不同的算法和数据结构结合在一起，并获取最佳效果。

>template是针对一个或多个尚未明确的型别所写的函数或类别，使用template时，可以显式（explicit）或者隐式的将型别作为参数来传递。

C++标准程序库比较重要的几个语言特性

1. template
2. 基本类的显式初始化
3. 异常处理
4. 命名空间
5. bool型别
6. 关键字explict
    
    >通过关键字explict的作用，我们可以禁止单参数构造函数被用于自动型别转换。
7. 新的型别转换操作符
    * static_cast
        
        >将一个值以符合逻辑的方式转型，可以看作利用原值重建一个临时对象，并在设立初值时使用型别转换。
    * dynamic_cast
        >将多态型别向下转型为其实际静态型别，这是唯一在执行器可以进行检验的转型动作。
    * const_cast
        >设定或去除型别的常数性，亦可去除volatile饰词，除此之外不允许任何转换。
    * reinterpret_cast
        >此操作符由实际编译器定义，可能重新解释bits意义，但也不一定如此，使用此转型动作可能带来不可移植性。
8. 常数静态成员
9. main()的定义式




